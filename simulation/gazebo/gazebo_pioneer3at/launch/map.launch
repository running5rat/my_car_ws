<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="world_name" value="$(find gazebo_pioneer3at)/worlds/test.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <arg name="name1" value="robot1"/>
    <arg name="name2" value="robot2"/>
    <arg name="name3" value="robot3"/>
    <arg name="name4" value="robot4"/>

    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>



<group ns="$(arg name1)">
    <!-- 加载机器人模型描述参数 -->
    <param name="robot_description" command="$(find xacro)/xacro  --inorder '$(find gazebo_pioneer3at)/urdf/pioneer3at_with_rplidar.xacro' ns:=$(arg name1)"/> 

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model $(arg name1) -param  robot_description  -x -3"  /> 

    <include file="$(find pioneer3at_navigation)/launch/exploring_slam_demo_robot1.launch"/>     
</group>

<group ns="$(arg name2)">
    <!-- 加载机器人模型描述参数 -->
    <param name="robot_description" command="$(find xacro)/xacro  --inorder '$(find gazebo_pioneer3at)/urdf/pioneer3at_with_rplidar.xacro' ns:=$(arg name2)"/> 

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model $(arg name2) -param  robot_description  -x 3"  /> 

    <include file="$(find pioneer3at_navigation)/launch/exploring_slam_demo_robot2.launch"/>     
</group>

<group ns="$(arg name3)">
    <!-- 加载机器人模型描述参数 -->
    <param name="robot_description" command="$(find xacro)/xacro  --inorder '$(find gazebo_pioneer3at)/urdf/pioneer3at_with_rplidar.xacro' ns:=$(arg name3)"/> 

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model $(arg name3) -param  robot_description  -x 0"  /> 

    <include file="$(find pioneer3at_navigation)/launch/exploring_slam_demo_robot3.launch"/>     
</group>

<group ns="$(arg name4)">
    <!-- 加载机器人模型描述参数 -->
    <param name="robot_description" command="$(find xacro)/xacro  --inorder '$(find gazebo_pioneer3at)/urdf/pioneer3at_with_rplidar.xacro' ns:=$(arg name4)"/> 

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model $(arg name4) -param  robot_description  -x 0"  /> 

    <include file="$(find pioneer3at_navigation)/launch/exploring_slam_demo_robot4.launch"/>     
</group>



</launch>
